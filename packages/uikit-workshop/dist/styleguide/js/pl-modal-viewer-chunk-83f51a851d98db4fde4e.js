(window.webpackJsonp=window.webpackJsonp||[]).push([["pl-modal-viewer"],{"./src/scripts/components/modal-viewer.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"./node_modules/@babel/runtime/regenerator/index.js\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// CONCATENATED MODULE: ./node_modules/scroll-js/dist/scroll.js\n\n\n/*!\n * Scroll-js v2.2.1\n * https://github.com/mkay581/scroll-js\n *\n * Copyright (c) 2019 Mark Kennedy\n * Licensed under the MIT license\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction scrollTo(el) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  regenerator_default.a.mark(function _callee() {\n    var scroll, currentScrollPosition, scrollProperty;\n    return regenerator_default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!(el instanceof Element) && !(el instanceof Window))) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(\"element passed to scrollTo() must be either the window or a DOM element, you passed \".concat(el, \"!\"));\n\n          case 2:\n            options = sanitizeScrollOptions(options);\n\n            scroll = function scroll(from, to, prop, startTime) {\n              var duration = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 300;\n              var easeFunc = arguments.length > 5 ? arguments[5] : undefined;\n              var callback = arguments.length > 6 ? arguments[6] : undefined;\n              window.requestAnimationFrame(function () {\n                var currentTime = Date.now();\n                var time = Math.min(1, (currentTime - startTime) / duration);\n\n                if (from === to) {\n                  return callback ? callback() : null;\n                }\n\n                setScrollPosition(el, easeFunc(time) * (to - from) + from);\n                /* prevent scrolling, if already there, or at end */\n\n                if (time < 1) {\n                  scroll(from, to, prop, startTime, duration, easeFunc, callback);\n                } else if (callback) {\n                  callback();\n                }\n              });\n            };\n\n            currentScrollPosition = getScrollPosition(el);\n            scrollProperty = getScrollPropertyByElement(el);\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              scroll(currentScrollPosition, typeof options.top === 'number' ? options.top : currentScrollPosition, scrollProperty, Date.now(), options.duration, getEasing(options.easing), resolve);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nfunction scrollIntoView(element, scroller, options) {\n  validateElement(element);\n\n  if (scroller && !(scroller instanceof Element)) {\n    options = scroller;\n    scroller = undefined;\n  }\n\n  var _sanitizeScrollOption = sanitizeScrollOptions(options),\n      duration = _sanitizeScrollOption.duration,\n      easing = _sanitizeScrollOption.easing;\n\n  scroller = scroller || utils.getDocument().body;\n  var currentContainerScrollYPos = 0;\n  var elementScrollYPos = element ? element.offsetTop : 0;\n  var document = utils.getDocument(); // if the container is the document body or document itself, we'll\n  // need a different set of coordinates for accuracy\n\n  if (scroller === document.body || scroller === document.documentElement) {\n    // using pageYOffset for cross-browser compatibility\n    currentContainerScrollYPos = window.pageYOffset; // must add containers scroll y position to ensure an absolute value that does not change\n\n    elementScrollYPos = element.getBoundingClientRect().top + currentContainerScrollYPos;\n  }\n\n  return scrollTo(scroller, {\n    top: elementScrollYPos,\n    left: 0,\n    duration: duration,\n    easing: easing\n  });\n}\n\nfunction validateElement(element) {\n  if (element === undefined) {\n    var errorMsg = 'The element passed to scrollIntoView() was undefined.';\n    throw new Error(errorMsg);\n  }\n\n  if (!(element instanceof HTMLElement)) {\n    throw new Error(\"The element passed to scrollIntoView() must be a valid element. You passed \".concat(element, \".\"));\n  }\n}\n\nfunction getScrollPropertyByElement(el) {\n  var props = {\n    window: {\n      y: 'scrollY',\n      x: 'scrollX'\n    },\n    element: {\n      y: 'scrollTop',\n      x: 'scrollLeft'\n    }\n  };\n  var axis = 'y';\n\n  if (el instanceof Window) {\n    return props.window[axis];\n  } else {\n    return props.element[axis];\n  }\n}\n\nfunction sanitizeScrollOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.behavior === 'smooth') {\n    options.easing = 'ease-in-out';\n    options.duration = 300;\n  }\n\n  if (options.behavior === 'auto') {\n    options.duration = 0;\n    options.easing = 'linear';\n  }\n\n  return options;\n}\n\nfunction getScrollPosition(el) {\n  var document = utils.getDocument();\n\n  if (el === document.body || el === document.documentElement || el instanceof Window) {\n    return document.body.scrollTop || document.documentElement.scrollTop;\n  } else {\n    return el.scrollTop;\n  }\n}\n\nfunction setScrollPosition(el, value) {\n  var document = utils.getDocument();\n\n  if (el === document.body || el === document.documentElement || el instanceof Window) {\n    document.body.scrollTop = value;\n    document.documentElement.scrollTop = value;\n  } else {\n    el.scrollTop = value;\n  }\n}\n\nvar utils = {\n  // we're really just exporting this so that tests can mock the document.documentElement\n  getDocument: function getDocument() {\n    return document;\n  }\n};\nvar easingMap = {\n  linear: function linear(t) {\n    return t;\n  },\n  'ease-in': function easeIn(t) {\n    return t * t;\n  },\n  'ease-out': function easeOut(t) {\n    return t * (2 - t);\n  },\n  'ease-in-out': function easeInOut(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  }\n};\n\nvar getEasing = function getEasing(easing) {\n  var defaultEasing = 'linear';\n  var easeFunc = easingMap[easing || defaultEasing];\n\n  if (!easeFunc) {\n    var options = Object.keys(easingMap).join(',');\n    throw new Error(\"Scroll error: scroller does not support an easing option of \\\"\".concat(easing, \"\\\". Supported options are \").concat(options));\n  }\n\n  return easeFunc;\n};\n\n\n// EXTERNAL MODULE: ./src/scripts/utils/index.js + 9 modules\nvar scripts_utils = __webpack_require__(\"./src/scripts/utils/index.js\");\n\n// EXTERNAL MODULE: ./src/scripts/components/panels-viewer.js\nvar panels_viewer = __webpack_require__(\"./src/scripts/components/panels-viewer.js\");\n\n// EXTERNAL MODULE: ./src/scripts/store.js + 20 modules\nvar store = __webpack_require__(\"./src/scripts/store.js\");\n\n// EXTERNAL MODULE: ./src/scripts/actions/app.js\nvar app = __webpack_require__(\"./src/scripts/actions/app.js\");\n\n// CONCATENATED MODULE: ./src/scripts/components/modal-viewer.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modalViewer\", function() { return modalViewer; });\n/* eslint-disable no-unused-vars */\n\n/**\n * \"Modal\" (aka Panel UI) for the Viewer Layer - for both annotations and code/info\n */\n\n\n\n // These are the actions needed by this element.\n\n\nvar modalViewer = {\n  // set up some defaults\n  delayCheckingModalViewer: false,\n  iframeElement: document.querySelector('.pl-js-iframe'),\n  active: false,\n  switchText: true,\n  template: 'info',\n  patternData: {},\n  targetOrigin: window.location.protocol === 'file:' ? '*' : window.location.protocol + '//' + window.location.host,\n\n  /**\n   * initialize the modal window\n   */\n  onReady: function onReady() {\n    window.addEventListener('message', modalViewer.receiveIframeMessage, false); // make sure the listener for checkpanels is set-up\n\n    scripts_utils[\"Dispatcher\"].addListener('insertPanels', modalViewer.insert);\n    modalViewer.__storeUnsubscribe = store[\"store\"].subscribe(function () {\n      return modalViewer._stateChanged(store[\"store\"].getState());\n    });\n\n    modalViewer._stateChanged(store[\"store\"].getState()); // check query strings to handle auto-opening behavior\n\n\n    var queryStringVars = scripts_utils[\"urlHandler\"].getRequestVars(); // show the modal if code view is called via query string\n\n    if (queryStringVars.view !== undefined && (queryStringVars.view === 'code' || queryStringVars.view === 'c' || queryStringVars.view === 'annotations' || queryStringVars.view === 'a')) {\n      store[\"store\"].dispatch(Object(app[\"updateDrawerState\"])(true));\n    }\n  },\n\n  /**\n   * toggle the modal window open and closed\n   */\n  toggle: function toggle() {\n    if (modalViewer.active) {\n      store[\"store\"].dispatch(Object(app[\"updateDrawerState\"])(false));\n    } else {\n      store[\"store\"].dispatch(Object(app[\"updateDrawerState\"])(true));\n    }\n  },\n\n  /**\n   * open the modal window\n   */\n  open: function open() {\n    modalViewer.queryPattern(); // Show annotations if data is available and modal is open\n\n    if (modalViewer.patternData) {\n      if (modalViewer.patternData.annotations && modalViewer.patternData.annotations.length > 0) {\n        var obj = JSON.stringify({\n          event: 'patternLab.annotationsHighlightShow',\n          annotations: modalViewer.patternData.annotations\n        });\n\n        if (modalViewer.iframeElement.contentWindow) {\n          modalViewer.iframeElement.contentWindow.postMessage(obj, modalViewer.targetOrigin);\n        } else {\n          modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n\n          if (modalViewer.iframeElement.contentWindow) {\n            modalViewer.open();\n          } else {\n            console.log('modelViewer open cannot find the iframeElement...');\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * close the modal window\n   */\n  close: function close() {\n    // tell the styleguide to close\n    var obj = JSON.stringify({\n      event: 'patternLab.patternModalClose'\n    });\n\n    if (modalViewer.iframeElement) {\n      if (modalViewer.iframeElement.contentWindow) {\n        modalViewer.iframeElement.contentWindow.postMessage(obj, modalViewer.targetOrigin);\n        var obj2 = JSON.stringify({\n          event: 'patternLab.annotationsHighlightHide'\n        });\n        modalViewer.iframeElement.contentWindow.postMessage(obj2, modalViewer.targetOrigin);\n      } else {\n        modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n\n        if (modalViewer.iframeElement.contentWindow) {\n          modalViewer.close();\n        } else {\n          console.log('modelViewer close cannot find the iframeElement...');\n        }\n      }\n    }\n  },\n\n  /**\n   * insert the copy for the modal window. if it's meant to be sent back to the iframe, do that.\n   * @param  {String}       the rendered template that should be inserted\n   * @param  {String}       the patternPartial that the rendered template is related to\n   * @param  {Boolean}      if the refresh is of a view-all view and the content should be sent back\n   * @param  {Boolean}      if the text in the dropdown should be switched\n   */\n  insert: function insert(templateRendered, patternPartial, iframePassback, switchText) {\n    if (iframePassback) {\n      // send a message to the pattern\n      var obj = JSON.stringify({\n        event: 'patternLab.patternModalInsert',\n        patternPartial: patternPartial,\n        modalContent: templateRendered.outerHTML\n      });\n\n      if (modalViewer.iframeElement.contentWindow) {\n        modalViewer.iframeElement.contentWindow.postMessage(obj, modalViewer.targetOrigin);\n      } else {\n        modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n\n        if (modalViewer.iframeElement.contentWindow) {\n          modalViewer.insert(templateRendered, patternPartial, iframePassback);\n        } else {\n          console.log('modelViewer insert cannot find the iframeElement...');\n        }\n      }\n    } else {\n      var contentContainer = document.querySelector('.pl-js-drawer-content'); // Clear out any existing children before appending the new panel content\n\n      if (contentContainer.firstChild !== null) {\n        contentContainer.removeChild(contentContainer.firstChild);\n      }\n\n      contentContainer.appendChild(templateRendered);\n    }\n  },\n\n  /**\n   * refresh the modal if a new pattern is loaded and the modal is active\n   * @param  {Object}       the patternData sent back from the query\n   * @param  {Boolean}      if the refresh is of a view-all view and the content should be sent back\n   * @param  {Boolean}      if the text in the dropdown should be switched\n   */\n  refresh: function refresh(patternData, iframePassback, switchText) {\n    // if this is a styleguide view close the modal\n    if (iframePassback) {\n      modalViewer.close();\n    }\n\n    modalViewer.patternData = patternData; // gather the data that will fill the modal window\n\n    panels_viewer[\"panelsViewer\"].gatherPanels(patternData, iframePassback, switchText);\n  },\n\n  /**\n   * slides the modal window into or out of view\n   * @param  {Integer}      where the modal window should be slide to\n   */\n  slide: function slide(pos) {\n    modalViewer.toggle();\n  },\n\n  /**\n   * slides the modal window to a particular annotation\n   * @param  {Integer}      the number for the element that should be highlighted\n   */\n  slideToAnnotation: function slideToAnnotation(pos) {\n    // remove active class\n    var els = document.querySelectorAll('.pl-js-annotations li');\n\n    for (var i = 0; i < els.length; ++i) {\n      els[i].classList.remove('pl-is-active');\n    }\n\n    var patternInfoElem = document.querySelector('.pl-js-pattern-info'); // const scroll = new Scroll(patternInfoElem);\n    // add active class to called element and scroll to it\n\n    for (var _i = 0; _i < els.length; ++_i) {\n      if (_i + 1 === pos) {\n        els[_i].classList.add('pl-is-active');\n\n        scrollTo(patternInfoElem, document.body, {\n          top: els[_i].offsetTop - 14,\n          behavior: 'smooth'\n        }).then(function () {// console.log('finished scrolling');\n        });\n      }\n    }\n  },\n\n  /**\n   * ask the pattern for info so we can open the modal window and populate it\n   * @param  {Boolean}      if the dropdown text should be changed\n   */\n  queryPattern: function queryPattern(switchText) {\n    // send a message to the pattern\n    var obj = JSON.stringify({\n      event: 'patternLab.patternQuery',\n      switchText: switchText\n    }); // only emit this when the iframe element exists.\n    // @todo: refactor to better handle async UI rendering\n\n    if (modalViewer.iframeElement) {\n      if (modalViewer.iframeElement.contentWindow) {\n        modalViewer.iframeElement.contentWindow.postMessage(obj, modalViewer.targetOrigin);\n      } else {\n        modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n\n        if (modalViewer.iframeElement.contentWindow) {\n          modalViewer.queryPattern(switchText);\n        } else {\n          console.log('queryPattern cannot find the iframeElement...');\n        }\n      }\n    } else {\n      modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n\n      if (modalViewer.iframeElement.contentWindow) {\n        modalViewer.iframeElement.contentWindow.postMessage(obj, modalViewer.targetOrigin);\n      }\n    }\n  },\n\n  /**\n   * toggle the comment pop-up based on a user clicking on the pattern\n   * based on the great MDN docs at https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage\n   * @param  {Object}      event info\n   */\n  receiveIframeMessage: function receiveIframeMessage(event) {\n    // does the origin sending the message match the current host? if not dev/null the request\n    if (window.location.protocol !== 'file:' && event.origin !== window.location.protocol + '//' + window.location.host) {\n      return;\n    }\n\n    var data = {};\n\n    try {\n      data = typeof event.data !== 'string' ? event.data : JSON.parse(event.data);\n    } catch (e) {// @todo: how do we want to handle exceptions here?\n    }\n\n    if (data.event !== undefined && data.event === 'patternLab.pageLoad') {\n      // @todo: refactor to better handle async iframe loading\n      // extra check to make sure the PL drawer will always render even if the iframe gets async loaded / rendered.\n      if (modalViewer.delayCheckingModalViewer) {\n        modalViewer._handleInitialModalViewerState();\n      }\n\n      if (data.patternpartial.indexOf('viewall-') === 0 || data.patternpartial.indexOf('all') === 0) {\n        store[\"store\"].dispatch(Object(app[\"isViewallPage\"])(true));\n      } else {\n        store[\"store\"].dispatch(Object(app[\"isViewallPage\"])(false));\n      }\n\n      if (modalViewer.active === false && data.patternpartial !== undefined && data.patternpartial.indexOf('viewall-') === 0 && window.config.defaultShowPatternInfo !== undefined && window.config.defaultShowPatternInfo) {\n        modalViewer.queryPattern(false);\n      } else if (modalViewer.active === true) {\n        modalViewer.queryPattern();\n      }\n    } else if (data.event !== undefined && data.event === 'patternLab.patternQueryInfo') {\n      if (!modalViewer.panelRendered || modalViewer.previouslyRenderedPattern !== data.patternData.patternPartial) {\n        // refresh the modal contents, but only when necessary (ex. when the page changes) -- prevents extra, unnecessary re-renders of content.\n        modalViewer.refresh(data.patternData, data.iframePassback, data.switchText);\n        modalViewer.panelRendered = true;\n        modalViewer.previouslyRenderedPattern = data.patternData.patternPartial;\n      }\n    } else if (data.event !== undefined && data.event === 'patternLab.annotationNumberClicked') {\n      // slide to a given annoation\n      modalViewer.slideToAnnotation(data.displayNumber);\n    }\n  },\n  _handleInitialModalViewerState: function _handleInitialModalViewerState() {\n    // try to re-locate the iframe element if this UI logic ran too early and the iframe component wasn't yet rendered\n    if (!modalViewer.iframeElement) {\n      modalViewer.iframeElement = document.querySelector('.pl-js-iframe');\n    } // only try to auto-open / auto-close the drawer UI if the iframe element exists\n    // @todo: refactor to better handle async UI rendering\n\n\n    if (modalViewer.iframeElement) {\n      modalViewer.delayCheckingModalViewer = false;\n\n      if (modalViewer.active) {\n        modalViewer.open();\n      } else {\n        modalViewer.close();\n      }\n    } else {\n      modalViewer.delayCheckingModalViewer = true;\n    }\n  },\n  _stateChanged: function _stateChanged(state) {\n    modalViewer.active = state.app.drawerOpened;\n\n    if (modalViewer.iframeElement) {\n      modalViewer._handleInitialModalViewerState();\n    }\n  }\n};\nmodalViewer.onReady();\n\n//# sourceURL=webpack:///./src/scripts/components/modal-viewer.js_+_1_modules?")},"./src/scripts/components/panels-viewer.js":function(module,exports){eval("throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\src\\\\scripts\\\\components\\\\panels-viewer.js: Unexpected token (372:0)\\n\\n\\u001b[0m \\u001b[90m 370 | \\u001b[39m$(\\u001b[32m'.pl-js-modal-resizer'\\u001b[39m)\\u001b[33m.\\u001b[39mmousedown(\\u001b[36mfunction\\u001b[39m(event) {\\u001b[0m\\n\\u001b[0m \\u001b[90m 371 | \\u001b[39m  \\u001b[90m/* 1 */\\u001b[39m\\u001b[0m\\n\\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 372 | \\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m     | \\u001b[39m\\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\u001b[0m\\n    at Object.raise (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:6325:17)\\n    at Object.unexpected (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:7642:16)\\n    at Object.parseExprAtom (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8841:20)\\n    at Object.parseExprAtom (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:3601:20)\\n    at Object.parseExprSubscripts (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8412:23)\\n    at Object.parseMaybeUnary (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8392:21)\\n    at Object.parseExprOps (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8267:23)\\n    at Object.parseMaybeConditional (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8240:23)\\n    at Object.parseMaybeAssign (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8187:21)\\n    at Object.parseExpression (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8135:23)\\n    at Object.parseStatementContent (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9958:23)\\n    at Object.parseStatement (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9829:17)\\n    at Object.parseBlockOrModuleBlockBody (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10405:25)\\n    at Object.parseBlockBody (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10392:10)\\n    at Object.parseBlock (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10376:10)\\n    at Object.parseFunctionBody (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9424:24)\\n    at Object.parseFunctionBodyAndFinish (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9394:10)\\n    at withTopicForbiddingContext (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10535:12)\\n    at Object.withTopicForbiddingContext (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9702:14)\\n    at Object.parseFunction (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10534:10)\\n    at Object.parseFunctionExpression (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8877:17)\\n    at Object.parseExprAtom (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8790:21)\\n    at Object.parseExprAtom (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:3601:20)\\n    at Object.parseExprSubscripts (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8412:23)\\n    at Object.parseMaybeUnary (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8392:21)\\n    at Object.parseExprOps (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8267:23)\\n    at Object.parseMaybeConditional (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8240:23)\\n    at Object.parseMaybeAssign (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8187:21)\\n    at Object.parseExprListItem (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9491:18)\\n    at Object.parseCallExpressionArguments (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8621:22)\\n    at Object.parseSubscript (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8514:29)\\n    at Object.parseSubscripts (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8433:19)\\n    at Object.parseExprSubscripts (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8422:17)\\n    at Object.parseMaybeUnary (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8392:21)\\n    at Object.parseExprOps (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8267:23)\\n    at Object.parseMaybeConditional (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8240:23)\\n    at Object.parseMaybeAssign (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8187:21)\\n    at Object.parseExpression (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:8135:23)\\n    at Object.parseStatementContent (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9958:23)\\n    at Object.parseStatement (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9829:17)\\n    at Object.parseBlockOrModuleBlockBody (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10405:25)\\n    at Object.parseBlockBody (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10392:10)\\n    at Object.parseTopLevel (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9758:10)\\n    at Object.parse (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11270:17)\\n    at parse (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11306:38)\\n    at parser (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\normalize-file.js:170:34)\\n    at normalizeFile (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\normalize-file.js:138:11)\\n    at runSync (D:\\\\src\\\\patternlab-node\\\\packages\\\\uikit-workshop\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\index.js:44:43)\");\n\n//# sourceURL=webpack:///./src/scripts/components/panels-viewer.js?")}}]);